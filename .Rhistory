# Create a Vector with Columns
columns = c("p","q","r", "het_e", "pseudo_h")
#Create a Empty DataFrame with 0 rows and n columns
df = data.frame(matrix(nrow = 5151, ncol = length(columns)))
# Assign column names
colnames(df) = columns
i <- 1
# loop through p-values
for (p_value in p_values) {
print(p_value)
# loop through q-values
for (q_value in q_values) {
if(p_value+q_value <= 1) {
r_value <- 1-(p_value+q_value)
current_ph <- pseudo_entropy(p_value, q_value, r_value)
current_het_e <- heterozygosity_e(p_value, q_value, r_value)
df$p[i] <- p_value
df$q[i] <- q_value
df$r[i] <- r_value
df$het_e[i] <- current_het_e
df$pseudo_h[i] <- current_ph
i <- i+1
}
}
}
summary(df)
df_het <- data.frame(df$p,df$q,df$het_e)
df_het <- df[,c("p","q","het_e")]
# plot heterozygosity and pseudoentropy in the same plot
scatter3D(x=df$p, y=df$q, z=df$pseudo_h,
pch = 20,
col= "blue",
phi=20,
theta=30,
alpha = 0.15,
xlab="p",
ylab="q",
zlab = "pseudoentropy (blue) / heterozygostiy (green)")
scatter3D(df$p, df$q, df$het_e,
pch = 20,
col= "green",
alpha = 0.20,
add=T)
# plot the absolute difference of heterozygosity and pseudoentropy
scatter3D(x=df$p, y=df$q, z=df$pseudo_h/df$het_e,
pch = 20,
col= "blue",
phi=40,
theta=30,
alpha = 0.15,
xlab="p",
ylab="q",
zlab = "ratio pseudoentropy - heterozygostiy")
# volcano is a numeric matrix that ships with R
fig <- plot_ly(z = ~volcano)
fig <- fig %>% add_surface()
fig
fig <- plot_ly(df, x = ~p, y = ~q, z = ~het_e, color = ~het_e)
fig <- plot_ly(x = df_het$p, y = df_het$q,z = df_het$het_e)
fig <- fig %>% add_surface()
fig
fig <- plot_ly(df_het, x = ~p, y = ~q, z = ~het_e)
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'expected heterozygosity')),
annotations = list(
x = 1.13,
y = 1.05,
text = 'Miles/(US) gallon',
xref = 'paper',
yref = 'paper',
showarrow = FALSE
))
fig
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'expected heterozygosity')))
fig
library(tidyr)
data_long <- gather(df, measure, value, het_e:pseudo_h, factor_key=TRUE)
data_long
View(data_long)
fig <- plot_ly(df_het, x = ~p, y = ~q, z = ~value,
color = ~measure, colors = c('#BF382A', '#0C4B8E'))
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'expected heterozygosity')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value,
color = ~measure, colors = c('#BF382A', '#0C4B8E'))
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'expected heterozygosity')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value,
color = ~measure, colors = c('#BF382A', '#0C4B8E'))
fig <- fig %>% add_markers(alpha = 0.2, name = "alpha")
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value,
color = ~measure, colors = c('green', 'blue'))
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(p, symbol = ~factor(measure), color = ~measure, colors = c('green', 'blue'))
fig <- fig %>% add_markers(symbol = ~factor(measure), color = ~measure, colors = c('green', 'blue'))
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
#fig <- fig %>% add_markers()
fig <- fig %>% add_markers(symbol = ~factor(measure), color = ~measure, colors = c('green', 'blue'))
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
#fig <- fig %>% add_markers()
fig <- fig %>% add_markers(symbol = ~factor(measure))
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value,
color = ~measure, colors = c('green', 'blue'))
fig <- fig %>% add_markers(
color = I("black"),
symbol = ~factor(cyl),
symbols = c("triangle-up", "diamond", "circle"))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value,
color = ~measure, colors = c('green', 'blue'))
fig <- fig %>% add_markers(
color = I("black"),
symbol = ~factor(measure),
symbols = c("triangle-up", "diamond", "circle"))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c("triangle-up", "diamond", "circle"))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 4))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 3))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 12))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbols = c(1))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbols = c(1))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbols = c(4))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbols = c(1,4))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 4))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 1))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value, alpha = 0.5)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 1))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value, alpha = 0.2)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 1))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value, alpha = 0.3)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 1))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value, alpha = 0.6)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 1))
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 1),
alpha = 0.2)
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 1),
alpha = 0.4)
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 1),
alpha = 0.2)
#add_markers(
#   p, color = I("black"),
#  symbol = ~factor(cyl),
# symbols = c("triangle-up", "diamond", "circle")
#)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
rm(list=ls())
library(lattice)
library(ggplot2)
library(plotly)
library(ggpubr)
library(plot3D)
pseudo_entropy <- function(p,q,r){
ph <- ifelse(p>0.0 & p<1.0,
-((1-p) * log(1-p) + (1-q) * log(1-q) + (1-r) * log(1-r)),
0.0
)
return(ph)
}
heterozygosity_e <- function(p,q,r) {
het_e <- 1 - (p^2 + q^2 + r^2)
return(het_e)
}
p_values <-seq(0,1,0.01)
q_values <- seq(0,1,0.01)
# Create a Vector with Columns
columns = c("p","q","r", "het_e", "pseudo_h")
#Create a Empty DataFrame with 0 rows and n columns
df = data.frame(matrix(nrow = 5151, ncol = length(columns)))
# Assign column names
colnames(df) = columns
i <- 1
# loop through p-values
for (p_value in p_values) {
print(p_value)
# loop through q-values
for (q_value in q_values) {
if(p_value+q_value <= 1) {
r_value <- 1-(p_value+q_value)
current_ph <- pseudo_entropy(p_value, q_value, r_value)
current_het_e <- heterozygosity_e(p_value, q_value, r_value)
df$p[i] <- p_value
df$q[i] <- q_value
df$r[i] <- r_value
df$het_e[i] <- current_het_e
df$pseudo_h[i] <- current_ph
i <- i+1
}
}
}
summary(df)
df_het <- data.frame(df$p,df$q,df$het_e)
df_het <- df[,c("p","q","het_e")]
library(tidyr)
data_long <- gather(df, measure, value, het_e:pseudo_h, factor_key=TRUE)
data_long
# plot heterozygosity and pseudoentropy in the same plot
scatter3D(x=df$p, y=df$q, z=df$pseudo_h,
pch = 20,
col= "blue",
phi=20,
theta=30,
alpha = 0.15,
xlab="p",
ylab="q",
zlab = "pseudoentropy (blue) / heterozygostiy (green)")
scatter3D(df$p, df$q, df$het_e,
pch = 20,
col= "green",
alpha = 0.20,
add=T)
# plot the absolute difference of heterozygosity and pseudoentropy
scatter3D(x=df$p, y=df$q, z=df$pseudo_h/df$het_e,
pch = 20,
col= "blue",
phi=40,
theta=30,
alpha = 0.15,
xlab="p",
ylab="q",
zlab = "ratio pseudoentropy - heterozygostiy")
fig <- plot_ly(data_long, x = ~p, y = ~q, z = ~value)
fig <- fig %>% add_markers(
color = ~measure,
colors = c('green', 'blue'),
symbol = ~factor(measure),
symbols = c(1, 1),
alpha = 0.2)
fig <- fig %>% layout(scene = list(xaxis = list(title = 'p'),
yaxis = list(title = 'q'),
zaxis = list(title = 'value of diversity measure')))
fig
setwd("/Users/niko/sciebo/Postdoc TU Dortmund/general_samples")
sfs<-(scan("test_sfs.sfs")) #read in the log sfs
barplot(sfs[-c(1,length(sfs))]) #plot variable sites
sfs<-(scan("test_sfs.sfs")) #read in the log sfs
barplot(sfs[-c(1,length(sfs))]) #plot variable sites
norm <- function(x) x/sum(x)
sfs<-norm(sfs[-c(1,length(sfs))])
barplot(sfs)
sfs<-(scan("test_sfs.sfs")) #read in the log sfs
barplot(sfs)
sfs<-(scan("test_sfs.sfs")) #read in the log sfs
barplot(sfs[-c(1,length(sfs))]) #plot variable sites
sfs<-norm(sfs[-c(1,length(sfs))])
barplot(sfs)
